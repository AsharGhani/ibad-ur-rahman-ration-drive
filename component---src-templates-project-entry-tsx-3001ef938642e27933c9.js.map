{"version":3,"sources":["webpack:///./src/templates/projectEntry.tsx","webpack:///./src/components/ProjectTitleBreadCrumb.tsx"],"names":["colorTheme","themeLight","xl","getEmSize","breakpoints","StyledContainerDiv","widths","StyledDescription","StyledDate","dates","dimensions","headingSizes","h4","PageTemplate","journeyHtml","projectEntry","data","contentfulProjectEntry","description","descriptionHtml","childMarkdownRemark","html","startDate","Date","undefined","layout","toLowerCase","journey","title","parent","parentProject","toLocaleDateString","weekday","year","month","day","dangerouslySetInnerHTML","__html","className","query","lg","StyledTitleContainerDiv","activeItem","SytledTitle","h3","h1","StyledBreadCrumbEntry","Link","fontSize","regular","buttonSecondary","StyledBreadCrumbSeparator","large","createBreadCrumbEntry","text","link","to","key","ProjectTitleBreadCrump","props","breadCrumbEntries","push","breadCrumbProjects","slug","reverse"],"mappings":"6OAUMA,EAAaC,IAEbC,EAAK,sBAAsBC,YAAUC,IAAYF,IAA/C,MAEFG,EAAqB,mBAAH,oBAAG,CAAH,0BAIpBH,EAJoB,UAKXC,YAAUG,IAAOJ,IALN,sBAUlBK,EAAoB,mBAAH,oBAAG,CAAH,cAGnBL,EAHmB,UAIVC,YAAUG,IAAOJ,IAJP,oBASjBM,EAAa,mBAAH,oBAAG,CAAH,SACLR,EAAWS,MADN,cAEDC,IAAWC,aAAaC,GAFvB,2BA4CDC,UAhCoC,SAAC,GAAa,IAM3DC,EALEC,EADyD,EAAXC,KAC1BC,uBACpBC,EAAcH,EAAaG,YAC3BC,EAAkBD,GAAeA,EAAYE,oBAAoBC,KACjEC,EAAYP,EAAaO,UAAY,IAAIC,KAAKR,EAAaO,gBAAaE,EAQ9E,OAJIT,EAAaU,QAAgD,YAAtCV,EAAaU,OAAOC,gBAC7CZ,EAAcC,EAAaY,SAAWZ,EAAaY,QAAQP,oBAAoBC,MAI/E,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAChB,EAAD,KACE,YAAC,IAAD,CAAwBuB,MAAOb,EAAaa,MAAOC,OAAQd,EAAae,gBACvER,GAAa,YAACd,EAAD,KAAac,EAAUS,wBAAmBP,EAZ5C,CAAEQ,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,cAclErB,GAAeK,GACf,YAACZ,EAAD,KACE,mBAAK6B,wBAAyB,CAAEC,OAAQlB,MAI3CL,GAAe,mBAAKwB,UAAU,wBAAwBF,wBAAyB,CAAEC,OAAQvB,SAS7F,IAAMyB,EAAQ,c,w6BCzErB,IAAMvC,EAAaC,IAEbC,EAAK,sBAAsBC,YAAUC,IAAYF,IAA/C,MACFsC,EAAK,sBAAsBrC,YAAUC,IAAYoC,IAA/C,MAEFC,EAA0B,mBAAH,mBAAG,CAAH,oGASzBvC,EATyB,UAUhBC,YAAUG,IAAOJ,IAVD,gGAmBLF,EAAW0C,WAnBN,MAuBvBC,EAAc,oBAAH,mBAAG,CAAH,aACFjC,IAAWC,aAAaiC,GADtB,OAGbJ,EAHa,cAIA9B,IAAWC,aAAakC,GAJxB,SAQXC,EAAwB,YAAOC,IAAP,qBAAH,aACZrC,IAAWsC,SAASC,QADR,YAEhBjD,EAAWkD,gBAFK,IAIvBV,EAJuB,cAKV9B,IAAWC,aAAaC,GALd,SASrBuC,EAA4B,oBAAH,mBAAG,CAAH,aAChBzC,IAAWsC,SAASI,MADJ,YAEpBpD,EAAWS,MAFS,0CAc/B,SAAS4C,EAAsBC,EAAcC,GAC3C,OACE,4BACE,YAACT,EAAD,CAAuBU,GAAID,EAAME,IAAI,QAClCH,GACsB,IACzB,YAACH,EAAD,OA6BSO,IAxBuD,SAASC,GAC7E,IAAMC,EAAoB,GAC1BA,EAAkBC,KAAKR,EAAsB,OAAQ,MAIrD,IAFA,IAAIS,EAAqB,GACrBhC,EAAgB6B,EAAM9B,OACnBC,GAAe,CACpB,IAAMyB,EAAO,gBAAkBzB,EAAciC,KAC7CD,EAAmBD,KAAKR,EAAsBvB,EAAcF,MAAO2B,IACnEzB,EAAgBA,EAAcA,cAOhC,OAJAgC,EAAqBA,EAAmBE,UAExCJ,EAAkBC,KAAlB,MAAAD,EAAiB,EAASE,IAGxB,YAACrB,EAAD,KACGmB,EACD,YAACjB,EAAD,KAAcgB,EAAM/B","file":"component---src-templates-project-entry-tsx-3001ef938642e27933c9.js","sourcesContent":["import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport IndexLayout from \"../layouts\";\r\nimport styled from \"@emotion/styled\";\r\nimport ProjectTitleBreadCrump from \"../components/ProjectTitleBreadCrumb\";\r\nimport { getEmSize } from \"../styles/mixins\";\r\nimport { widths, breakpoints, dimensions, themeLight } from \"../styles/variables\";\r\n\r\nconst colorTheme = themeLight;\r\n\r\nconst xl = `@media (min-width: ${getEmSize(breakpoints.xl)}em)`;\r\n\r\nconst StyledContainerDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  ${xl} {\r\n    width: ${getEmSize(widths.xl)}em;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst StyledDescription = styled.div`\r\n  width: 100%;\r\n\r\n  ${xl} {\r\n    width: ${getEmSize(widths.xl)}em;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst StyledDate = styled.div`\r\n  color: ${colorTheme.dates};\r\n  font-size: ${dimensions.headingSizes.h4}rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\ninterface PageTemplateProps {\r\n  data: {\r\n    contentfulProjectEntry: ProjectEntry;\r\n  };\r\n}\r\n\r\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => {\r\n  const projectEntry = data.contentfulProjectEntry;\r\n  const description = projectEntry.description;\r\n  const descriptionHtml = description && description.childMarkdownRemark.html;\r\n  const startDate = projectEntry.startDate ? new Date(projectEntry.startDate) : undefined;\r\n  const dateOptions = { weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n  let journeyHtml: string | undefined;\r\n\r\n  if (projectEntry.layout && projectEntry.layout.toLowerCase() === \"journey\") {\r\n    journeyHtml = projectEntry.journey && projectEntry.journey.childMarkdownRemark.html;\r\n  }\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <StyledContainerDiv>\r\n          <ProjectTitleBreadCrump title={projectEntry.title} parent={projectEntry.parentProject}></ProjectTitleBreadCrump>\r\n          {startDate && <StyledDate>{startDate.toLocaleDateString(undefined, dateOptions)}</StyledDate>}\r\n          {/* eslint-disable-next-line react/no-danger */}\r\n          {!journeyHtml && descriptionHtml && (\r\n            <StyledDescription>\r\n              <div dangerouslySetInnerHTML={{ __html: descriptionHtml }} />\r\n            </StyledDescription>\r\n          )}\r\n\r\n          {journeyHtml && <div className=\"project-entry-journey\" dangerouslySetInnerHTML={{ __html: journeyHtml }}></div>}\r\n        </StyledContainerDiv>\r\n      </Page>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n\r\nexport const query = graphql`\r\n  query projectEntryPageQuery($slug: String!) {\r\n    contentfulProjectEntry(slug: { eq: $slug }) {\r\n      slug\r\n      title\r\n      layout\r\n      startDate\r\n      journey {\r\n        childMarkdownRemark {\r\n          html\r\n        }\r\n      }\r\n      description {\r\n        childMarkdownRemark {\r\n          html\r\n        }\r\n      }\r\n      parentProject {\r\n        slug\r\n        parentProject {\r\n          slug\r\n          parentProject {\r\n            slug\r\n            title\r\n          }\r\n          title\r\n        }\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { themeLight, dimensions, widths, breakpoints } from \"../styles/variables\";\r\nimport { Link } from \"gatsby\";\r\nimport { getEmSize } from \"../styles/mixins\";\r\n\r\nconst colorTheme = themeLight;\r\n\r\nconst xl = `@media (min-width: ${getEmSize(breakpoints.xl)}em)`;\r\nconst lg = `@media (min-width: ${getEmSize(breakpoints.lg)}em)`;\r\n\r\nconst StyledTitleContainerDiv = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n\r\n  ${xl} {\r\n    width: ${getEmSize(widths.xl)}em;\r\n    margin: auto;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 0.125rem;\r\n    background-color: ${colorTheme.activeItem};\r\n  }\r\n`;\r\n\r\nconst SytledTitle = styled.span`\r\n  font-size: ${dimensions.headingSizes.h3}rem;\r\n\r\n  ${lg} {\r\n    font-size: ${dimensions.headingSizes.h1}rem;\r\n  }\r\n`;\r\n\r\nconst StyledBreadCrumbEntry = styled(Link)`\r\n  font-size: ${dimensions.fontSize.regular}px;\r\n  color: ${colorTheme.buttonSecondary};\r\n\r\n  ${lg} {\r\n    font-size: ${dimensions.headingSizes.h4}rem;\r\n  }\r\n`;\r\n\r\nconst StyledBreadCrumbSeparator = styled.span`\r\n  font-size: ${dimensions.fontSize.large}px;\r\n  color: ${colorTheme.dates};\r\n  &:after {\r\n    content: \"\\u232a\";\r\n  }\r\n  padding: 0px 8px;\r\n`;\r\n\r\ninterface ProjectTitleBreadCrumpProps {\r\n  title: string;\r\n  parent?: ProjectType;\r\n}\r\n\r\nfunction createBreadCrumbEntry(text: string, link: string) {\r\n  return (\r\n    <>\r\n      <StyledBreadCrumbEntry to={link} key=\"link\">\r\n        {text}\r\n      </StyledBreadCrumbEntry>{\" \"}\r\n      <StyledBreadCrumbSeparator />\r\n    </>\r\n  );\r\n}\r\n\r\nconst ProjectTitleBreadCrump: React.FC<ProjectTitleBreadCrumpProps> = function(props) {\r\n  const breadCrumbEntries = [];\r\n  breadCrumbEntries.push(createBreadCrumbEntry(\"Home\", \"/\"));\r\n\r\n  let breadCrumbProjects = [];\r\n  let parentProject = props.parent;\r\n  while (parentProject) {\r\n    const link = \"/projecttype/\" + parentProject.slug;\r\n    breadCrumbProjects.push(createBreadCrumbEntry(parentProject.title, link));\r\n    parentProject = parentProject.parentProject;\r\n  }\r\n\r\n  breadCrumbProjects = breadCrumbProjects.reverse();\r\n\r\n  breadCrumbEntries.push(...breadCrumbProjects);\r\n\r\n  return (\r\n    <StyledTitleContainerDiv>\r\n      {breadCrumbEntries}\r\n      <SytledTitle>{props.title}</SytledTitle>\r\n    </StyledTitleContainerDiv>\r\n  );\r\n};\r\n\r\nexport default ProjectTitleBreadCrump;\r\n"],"sourceRoot":""}